{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchOffersSuccess, fetchOffersFailure } from './shop.actions';\nimport shopActionTypes from './shop.types';\nexport function* fetchOffersAsync() {\n  try {\n    const collectionRef = firestore.collection('offers');\n    const snapshot = yield collectionRef.get();\n    const offersMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchOffersSuccess(offersMap));\n  } catch (error) {\n    yield put(fetchOffersFailure(error.message));\n  }\n}\nexport function* fetchOffersStart() {\n  yield takeLatest(shopActionTypes.FETCH_OFFERS_START, fetchOffersAsync);\n}","map":{"version":3,"sources":["C:/Users/hekoe/Documents/DevProjects/react/ecommerce-project/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchOffersSuccess","fetchOffersFailure","shopActionTypes","fetchOffersAsync","collectionRef","collection","snapshot","get","offersMap","error","message","fetchOffersStart","FETCH_OFFERS_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,gBAAvD;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,QAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,SAAS,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAA5B;AACA,UAAMT,GAAG,CAACG,kBAAkB,CAACQ,SAAD,CAAnB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACI,kBAAkB,CAACQ,KAAK,CAACC,OAAP,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,QAAMhB,UAAU,CAACO,eAAe,CAACU,kBAAjB,EAAqCT,gBAArC,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils';\r\n\r\nimport { fetchOffersSuccess, fetchOffersFailure } from './shop.actions';\r\n\r\nimport shopActionTypes from './shop.types';\r\n\r\nexport function* fetchOffersAsync() {\r\n  try {\r\n    const collectionRef = firestore.collection('offers');\r\n    const snapshot = yield collectionRef.get();\r\n    const offersMap = yield call(convertCollectionsSnapshotToMap, snapshot);\r\n    yield put(fetchOffersSuccess(offersMap));\r\n  } catch (error) {\r\n    yield put(fetchOffersFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* fetchOffersStart() {\r\n  yield takeLatest(shopActionTypes.FETCH_OFFERS_START, fetchOffersAsync);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}